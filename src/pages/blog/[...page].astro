---
import type { GetStaticPaths } from "astro"
import { getCollection, getEntry } from "astro:content"
import PostCard from "@/components/PostCard.astro"
import Pagination from "@/components/Pagination.astro"

import BaseLayout from "@/layouts/BaseLayout.astro"

export const getStaticPaths = (async ({ paginate }) => {
  const postCollection = await getCollection("postCollection")

  const posts = postCollection.sort(
    (a, b) => a.data.date.valueOf() - b.data.date.valueOf(),
  )

  return paginate(posts, { pageSize: 3 })
}) satisfies GetStaticPaths

const title = "The Blog"
const description = "A blog about meh."
const { page } = Astro.props
---

<BaseLayout title={title} description={description}>
  <section>
    {
      page.data.map((post) => (
        <article>
          <PostCard post={post} />
        </article>
      ))
    }
  </section>
  {
    page.lastPage > 1 && (
      <Pagination
        firstPage={page.url.prev ? "/blog" : null}
        previousPage={page.url.prev ? page.url.prev : null}
        nextPage={page.url.next ? page.url.next : null}
        lastPage={
          page.url.next ? `/blog/${Math.round(page.total / page.size)}` : null
        }
        currentPage={page.currentPage}
        totalPages={Math.round(page.total / page.size)}
      />
    )
  }
</BaseLayout>
