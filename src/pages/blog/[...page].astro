---
import type { GetStaticPaths } from "astro"
import { getCollection } from "astro:content"
import { site, blog } from "@/data/config.json";

import { sortByDate, filterByStatus } from "@/utils/postFunctions"

import Grid from "@/components/Grid.astro";
import PostCard from "@/components/PostCard.astro"
import Pagination from "@/components/Pagination.astro"

import BaseLayout from "@/layouts/BaseLayout.astro"

export const getStaticPaths = (async ({ paginate }) => {
  const postCollection = await getCollection("postCollection")
  const allPosts = sortByDate(postCollection);
  const posts = filterByStatus(allPosts)
  return paginate(posts, { pageSize: 3 })
}) satisfies GetStaticPaths


const { page } = Astro.props;

// console.dir(page, { depth: null });
---

<BaseLayout title={blog.title || 'Blog'} description={blog.description || site.description}>
  <section class="section">
    <Grid style="--grid-column: breakout; --_column: 30ch; --_row-gap: var(--size-fluid-5);">
      {
        page.data.map((post) => <PostCard post={post} />)
      }
    </Grid>

    
  </section>

  <section class="section" style="--_padding-block-end: var(--size-fluid-7)">
    {
      page.lastPage > 1 && (
        <Pagination
          firstPage={page.url.prev ? "/blog" : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={
            page.url.next ? `/blog/${Math.round(page.total / page.size)}` : null
          }
          currentPage={page.currentPage}
          totalPages={Math.round(page.total / page.size)}
        />
      )
    }
  </section>

</BaseLayout>
