---
import PostCard from "@/components/PostCard.astro"
import type { ConfigObj } from "@/types/config"
import ButtonLink from "@/components/ButtonLink.astro"
import config from "@/data/config.json"
import Grid from "@/components/Grid.astro"

import BaseLayout from "@/layouts/BaseLayout.astro"
import { sortByDate, filterByStatus } from "@/utils/postFunctions"
import { getCollection } from "astro:content"

import Container from "@/components/Container.astro"
import Group from "@/components/Group.astro"
import { Icon } from "astro-icon/components"

const postCollection = await getCollection("post")

const sortedPosts = sortByDate(postCollection)

const filteredPosts = filterByStatus(sortedPosts)

const { blogPageSize: pageSize }: ConfigObj["home"] = config.home

const { title: siteTitle, description: siteDescription }: ConfigObj["site"] =
  config.site

const posts = filteredPosts.slice(0, pageSize || 4)
---

<BaseLayout title={siteTitle} description={siteDescription}>
  <Group type="section" hasFlow flowSize="size-fluid-6">
    <Container>
      <Grid
        type="auto-fill"
        columnSize="size-fluid-9"
        rowGap="size-fluid-5"
        class="post-grid column-breakout"
      >
        {
          posts.map((item, index) => (
            <PostCard
              post={item}
              index={index}
              class={index === 0 ? "card--hero" : ""}
            />
          ))
        }
      </Grid>
    </Container>

    <Container>
      <ButtonLink class="button--block" href="/blog" variant="accent"
        ><Icon name="lucide:layout-grid" /> View all posts</ButtonLink
      >
    </Container>
  </Group>
</BaseLayout>

<style>
  .post-grid {
    align-items: start;
    
    @media (--lg-n-above) {
      --_grid-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (--sm-n-above) {
    .post-grid:has(> :nth-child(5)) {
      & > .card:first-child {
        --_thumbnail-size: 100%;
        grid-column: 1/-1;
      }
    }
  }

  @media (--md-n-above) {
    .post-grid:has(> :nth-child(5)) {
      & > .card:first-child {
        --_image-ratio: 2/1.25;
      }
    }
  }

  @media (--lg-n-above) {
    .post-grid:has(> :nth-child(4)) {
      & > .card:first-child {
        grid-column: 1/-1;
        --_image-ratio: 2/1.25;
        --_thumbnail-size: 65.5%;
        --_summary-size: 30%;
        --_gap: var(--size-gutter);
        --_align-items: end;
      }
    }

    .post-grid:has(> :nth-child(5)) {
      & > .card:first-child {
        --_image-ratio: 1/1;
        row-gap: var(--size-fluid-3);
        grid-column: 1;
      }
    }
  }

  .button--block {
    justify-self: center;
    width: 100%;
    @media (--sm-n-above) {
      width: initial;
    }
  }
</style>
