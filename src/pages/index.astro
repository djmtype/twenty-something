---
import type { ConfigObj } from "@/data/config.types"
import ButtonLink from "@/components/ButtonLink.astro"
import config from "@/data/config.json"
import Grid from "@/components/Grid.astro"
import PostItem from "@/components/PostItem.astro"
import BaseLayout from "@/layouts/BaseLayout.astro"
import { sortByDate, filterByStatus } from "@/utils/postFunctions"
import { getCollection } from "astro:content"

import Container from "@/components/Container.astro"
import Group from "@/components/Group.astro"
import { Icon } from "astro-icon/components"

const postCollection = await getCollection("postCollection")

const sortedPosts = sortByDate(postCollection)

const filteredPosts = filterByStatus(sortedPosts)

const { homeBlogPageSize: pageSize }: ConfigObj["settings"] = config.settings

const { title: siteTitle, description: siteDescription }: ConfigObj["site"] =
  config.site

const posts = filteredPosts.slice(0, pageSize || 4)
---

<BaseLayout title={siteTitle} description={siteDescription}>
  <Group type="section">
    <Container>
      <Grid
        auto
        columnSize="size-fluid-9"
        rowGap="size-fluid-5"
        class="post-grid column-breakout"
        style={{ alignItems: "start" }}
      >
        {posts.map((item, index) => <PostItem post={item} index={index} />)}

       
        
            <ButtonLink class="button--block" href="/blog" variant="accent"><Icon name="lucide:layout-grid" /> View all posts</ButtonLink>
         
        
      </Grid>
     
    </Container>
  </Group>
</BaseLayout>

<style>
  .post-grid {
    @media (--lg-n-above) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .post-grid > *:first-child {
    @media (--lg-n-above) {
      grid-column: 1/-1;
    }
  }


  .box {
    display: grid;
    place-content: center;
    aspect-ratio: 1/1;
    background: var(--surface-overlay);
    border-radius: var(--radius-3);
  }
  .button--block {
grid-column: 1/-1;
justify-self: center;


  }
</style>
