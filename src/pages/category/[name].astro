---
import { makeRichTitle } from "@/utils/textConverter"
import BaseLayout from "@/layouts/BaseLayout.astro"

import PostCard from "@/components/PostCard.astro"
import Grid from "@/components/Grid.astro"

import { getTaxonomy } from "@/utils/taxonomyParser"
import taxonomyFilter from "@/utils/taxonomyFilter"

import { sortByDate, filterByStatus } from "@/utils/postFunctions"

import { getCollection } from "astro:content"

export async function getStaticPaths() {
  const categories = await getTaxonomy("postCollection", "categories")

  return categories.map((category) => {
    return {
      params: { name: category },
      props: { category },
    }
  })
}

const { category } = Astro.props

const categoryTitle = await makeRichTitle(category)


const postCollection = await getCollection("postCollection")

const allPosts = sortByDate(postCollection)
const posts = filterByStatus(allPosts)


const filterByCategories = taxonomyFilter(posts, "categories", category!)
---

<BaseLayout
  title={`Category: ${categoryTitle}`}
  description={`A list of entries with category, ${categoryTitle}`}
>
  <section class="entry section container">
    <div class="entry__content column-breakout flow">
      <h1 class="entry__title text-serif">
        Category: <span>{categoryTitle}</span>
      </h1>

      <Grid type="auto" class="entry__grid">
        {filterByCategories.map((post) => <PostCard class="entry__card" post={post} />)}
      </Grid>
    </div>
  </section>
</BaseLayout>

<style>
  .entry__title {
    font-size: var(--font-size-fluid-3);
  }

  .entry__title span {
    font-style: italic;
  }

  .entry__grid {
    --_column: 30ch;
    --_row-gap: var(--size-fluid-5);
    align-items: start;
  }

  .entry__content {
    --_flow: var(--size-fluid-6);
  }
</style>
