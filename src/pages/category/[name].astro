---
import { metafy } from "@/utils/textConverter";

import PostCard from "@/components/PostCard.astro"
import LayoutGrid from "@/components/LayoutGrid.astro";

import { getTaxonomy } from "@/utils/taxonomyParser"
import taxonomyFilter from "@/utils/taxonomyFilter"

import BaseLayout from "@/layouts/BaseLayout.astro"
import FormattedDate from "@/components/FormattedDate.astro"


import { getCollection } from "astro:content"

export async function getStaticPaths() {

  const categories = await getTaxonomy("postCollection", "categories");

  return categories.map((category) => {
    return {
      params: { name: category },
      props: { category },
    }
  })
}



const { category } = Astro.props;
// const plainifyCategory = await plainify(category);


const metafyCategory = await metafy(category);




const posts = await getCollection(
  "postCollection",
  ({ data }) => data.status === "publish",
);

// console.log(categoryPosts)

const filterByCategories = taxonomyFilter(posts, "categories", category!)
---

<BaseLayout title={metafyCategory} description={`A list of entries with category, ${metafyCategory}`}>

  <section class="section container">
    <div class="column-breakout flow" style="--_flow: var(--size-fluid-6)">
      <h1>{`Category: ${metafyCategory}`}</h1>
    
      <LayoutGrid maxColumnWidth style="--_column: 30ch; --_row-gap: var(--size-fluid-5); --_align-items: start">
        {
          filterByCategories.map((post) => <PostCard post={post} />)
        }
      </LayoutGrid>
    
    </div>
   
  </section>
  
</BaseLayout>

<style>
  h1 {
    font-size: var(--font-size-fluid-3);
  }
</style>
