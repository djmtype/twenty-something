---
import { metafy } from "@/utils/textConverter";

import { getTaxonomy } from "@/utils/taxonomyParser"
import taxonomyFilter from "@/utils/taxonomyFilter"

import BaseLayout from "@/layouts/BaseLayout.astro"
import FormattedDate from "@/components/FormattedDate.astro"


import { getCollection } from "astro:content"

export async function getStaticPaths() {

  const categories = await getTaxonomy("postCollection", "categories");

  return categories.map((category) => {
    return {
      params: { name: category },
      props: { category },
    }
  })
}



const { category } = Astro.props;
// const plainifyCategory = await plainify(category);


const metafyCategory = await metafy(category);




const posts = await getCollection(
  "postCollection",
  ({ data }) => data.status === "publish",
);

// console.log(categoryPosts)

const filterByCategories = taxonomyFilter(posts, "categories", category!)
---

<BaseLayout title={metafyCategory} description={`A list of entries with category, ${metafyCategory}`}>
  <h1>{`Category: ${metafyCategory}`}</h1>

  <ul>
    {
     filterByCategories.map((p) => (
       <li><a href={`/${p.slug}`}>{p.data.title} - </a><FormattedDate date={p.data.date} /></li> 
      ))
    }
  </ul>
</BaseLayout>
