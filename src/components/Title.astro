---
import { slugify } from "@/utils/textConverter"

type Props = {
  level: "h2" | "h3" | "h4" | "h5" | "p" | "span"
  class?: string
  textAlign?: string
  textColor?: string
  hasId?: boolean
  hasAnchor?: boolean
  hasIcon?: boolean
}

const html = await Astro.slots.render('default');

const {
  level = 'span',
  hasId,
  class: className,
  textAlign,
  textColor,
  hasAnchor,
  hasIcon,
} = Astro.props as Props



let HL = `${level}` as any

const hlProps = {
  ...(hasId && html ? { id: slugify(html) } : {}),
  class: [
    "text-headline",
    textAlign === "center" ? "text-center" : "",
    textColor ? `text-color-${textColor}` : "",
    hasAnchor ? "text-anchor" : "",
    hasIcon ? "title--icon" : "",
    className || ""
  ].filter(Boolean).join(" "),
}
---

<HL {...hlProps}>
  <slot />
  {
    hasAnchor ? (
      <a class="anchor-link" href={"#" + slugify(html)}>
        <>
          <span class="anchor-icon" aria-hidden="true">
            #
          </span>
          <span class="sr-only">Anchor for &ldquo;{html}&rdquo;</span>
        </>
      </a>
    ) : null
  }
</HL>

<style>
  .title--icon::before {
    content: "";
    width: 1.5rem;
    height: 3rem;
    background: var(--_color, currentColor);
    clip-path: path(
      "M11.93.684v8.039l5.633-5.633 1.216 1.23-5.66 5.66h8.04v1.737H13.2l5.701 5.701-1.23 1.23-5.742-5.742V21h-1.737v-8.094l-5.77 5.77-1.23-1.217 5.743-5.742H.842V9.98h8.162l-5.701-5.7 1.23-1.231 5.66 5.66V.684h1.737Z"
    );
    display: block;
  }
</style>
