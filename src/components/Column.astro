---
type Props = {
  class?: string
  name: "passage" | "content" | "breakout" | "full"
  hasFlow?: boolean
  flowSize?: string
  background?: string
  hasRadius?: boolean
  style?: any
}

const {
  class: className,
  name = "content",
  hasFlow,
  background,
  hasRadius,
  style: restStyles, flowSize
} = Astro.props

const myStyles = {
  ...(name === "full" ? { '--_container-column': 'column-full' } : {}),
  ...(background ? { '--_column-background': `var(--${background})`, '--_padding': 'var(--gutter)' } : {}),
  ...(hasRadius ? { '--_column-radius': 'var(--radius-3)' } : {}),
};
---

<div
  class:list={["column", `column-${name}`, hasFlow ? "flow" : "", className]}
  style={{ 
    ...(flowSize && { '--_flow': `var(--size-${flowSize})` }),
    ...myStyles,
    ...restStyles,
  }}
>
  <slot />
</div>

<style>
  .column {
    --_padding-block: initial;
    --_padding-inline: initial;
    --_padding: initial;
    background: var(--_column-background);
    padding-block: var(--_padding, var(--_padding-block));
    padding-inline: var(--_padding, var(--_padding-inline));
    border-radius: var(--_column-radius);
  }
</style>
