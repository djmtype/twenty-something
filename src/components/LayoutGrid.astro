---
type Props = {
  class?: string
  columnSize?: string
  gapSize?: string
  columnGapSize?: string
  rowGapSize?: string
  alignItems?: string
  style?: any
}
const { columnSize, gapSize, columnGapSize, rowGapSize, class: className, ...restProps } = Astro.props


const styles = {
  ...(columnSize && { '--_column': `var(--${columnSize})` }),
  ...(gapSize && { '--_gap': `var(--${gapSize})` }),
  ...(columnGapSize && { '--_column-gap': `var(--${columnGapSize})` }),
  ...(rowGapSize && { '--_row-gap': `var(--${rowGapSize})` }),
}
---

<div class:list={[`layout-grid`, className]} 
style={{
  ...styles, 
  ...restProps.style
}} {...restProps}>
  <slot />
</div>

<style is:global>
  .layout-grid {
    --_column: var(--size-content-2);
    --_column-gap: var(--gutter);
    --_row-gap: var(--gutter);
    
    display: grid;
    column-gap: var(--_gap, var(--_column-gap));
    row-gap: var(--_gap, var(--_row-gap));
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(100%, var(--_column)), 1fr)
    );
  }
</style>
