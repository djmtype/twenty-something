---
type Props = {
  class?: string
  columnSize?: string
  gap?: string
  columnGap?: string
  rowGap?: string
  alignItems?: string
  style?: any
}
const { style: additionalStyles, columnSize, gap, columnGap, rowGap, alignItems, class: className, ...restProps } = Astro.props
---

<div class:list={[`layout-grid`, className]} 
style={{
  ...(columnSize && { '--_column': `var(--${columnSize})` }),
  ...(gap && { '--_gap': `var(--${gap})` }),
  ...(columnGap && { '--_column-gap': `var(--${columnGap})` }),
  ...(rowGap && { '--_row-gap': `var(--${rowGap})` }),
  ...(alignItems && { '--_align-items': alignItems }),
  ...additionalStyles
}} {...restProps}>
  <slot />
</div>

<style is:global>
  .layout-grid {
    --_column: var(--size-content-2);
    --_column-gap: var(--gutter);
    --_row-gap: var(--gutter);
    --_align-items: initial;
    
    display: grid;
    column-gap: var(--_gap, var(--_column-gap));
    row-gap: var(--_gap, var(--_row-gap));
    align-items: var(--_align-items);
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(100%, var(--_column)), 1fr)
    );
  }
</style>
