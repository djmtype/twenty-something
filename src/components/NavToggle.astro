<button class="navigation-toggle" aria-label="Open menu navigation">
    <svg
      aria-hidden="true"
      focusable="false"
      width="34"
      height="31"
      viewBox="0 0 34 31"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M2 4.96313H32"
        stroke="currentColor"
        stroke-width="4"
        stroke-linecap="round"></path>
      <path
        d="M2 15.9631H32"
        stroke="currentColor"
        stroke-width="4"
        stroke-linecap="round"></path>
      <path
        d="M2 26.9631H32"
        stroke="currentColor"
        stroke-width="4"
        stroke-linecap="round"></path>
    </svg>
  </button>
  
  <script is:inline>
    const setupNav = () => {
      // variables
      let responsiveToggle = document.querySelector(".navigation-toggle")
  
      const icon = `<svg aria-hidden='true'
      focusable='false' width="34" height="31" viewBox="0 0 34 31" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M2 4.96313H32" stroke="currentColor" stroke-width="4" stroke-linecap="round"/>
          <path d="M2 15.9631H32" stroke="currentColor" stroke-width="4" stroke-linecap="round"/>
          <path d="M2 26.9631H32" stroke="currentColor" stroke-width="4" stroke-linecap="round"/>
          </svg>`
  
      const iconClosed = `<svg aria-hidden='true'
      focusable='false' width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M4.39337 4.39355L25.6066 25.6068" stroke="currentColor" stroke-width="4" stroke-linecap="round"/>
  <path d="M4.39337 25.6064L25.6066 4.39324" stroke="currentColor" stroke-width="4" stroke-linecap="round"/>
  </svg>
  `
  
      // functions
      const openMenu = (toggle) => {
        toggle.setAttribute("aria-expanded", true)
        toggle.setAttribute("aria-label", "Close menu navigation")
        toggle.innerHTML = iconClosed
      }
  
      const closeMenu = (toggle) => {
        toggle.setAttribute("aria-expanded", false)
        toggle.setAttribute("aria-label", "Open menu navigation")
        toggle.innerHTML = icon
      }
  
      // execution
      responsiveToggle.addEventListener("click", (_) => {
        const mainNavigation = document.querySelector("#primary-navigation")
  
        mainNavigation.classList.toggle("show")
        mainNavigation.classList.contains("show")
          ? openMenu(responsiveToggle)
          : closeMenu(responsiveToggle)
      })
  
      // check if responsive menu is open when resized and then remove
      window.addEventListener("resize", (_) => {
        const mainNavigation = document.querySelector("#primary-navigation")
  
        if (
          mainNavigation.classList.contains("show") &&
          window.matchMedia("(min-width: 1024px)").matches
        ) {
          mainNavigation.classList.remove("show")
          closeMenu(responsiveToggle)
        }
      })
    }
  
    setupNav()
  </script>
  
  <style is:global>


    .navigation-toggle {
      color: var(--color-accent);
      appearance: none;
      border: 0;
      background-color: transparent;
      align-self: center;
      border-radius: 100%;
   
      margin: 0 var(--gutter);
      width: 2rem;
      height: 2rem;
      display: grid;
      place-content: center;
    }
  
    .navigation-toggle svg {
      width: 2rem;
      height: 2rem;
    }
  
    @media (--lg-n-above) {
      .navigation-toggle {
        display: none;
      }
    }
  
    .navigation-toggle[aria-expanded="true"] {
      color: var(--color-primary);
      background-color: transparent;
    }
  
    .no-js .navigation-toggle {
      display: none;
    }
  </style>
  