---
import { smartify } from '@/utils/textConverter'
import { Icon } from 'astro-icon/components'
import Title from './Title.astro'

type Props = {
    title?: string
    variant: 'tip' | 'info' | 'caution' | 'danger'
    class?: string
}

const { title, variant = 'info', class: className } = Astro.props


const getIcon = () => {
    switch (variant) {
      case 'tip':
        return 'pin';
      case 'info':
        return 'info';
      case 'caution':
        return 'alert-triangle';
      case 'danger':
        return 'alert-octagon';
      default:
        return '';
    }
  };

  const iconName = getIcon();

---


<aside class:list={[`callout callout--${variant}`, className]}>
 {title ? (
<p set:html={smartify(title)} class="callout__title" />
 ) : 
 <Title level="p" class="callout__title"><slot name="title" /></Title>
 }
  <Icon class="callout__icon" name={`lucide:${iconName}`} aria-hidden="true" />
  <section class="callout__content flow">
      <slot />
  </section>
</aside>

<style is:global>
    .callout {
        display: grid;
        gap: var(--size-3);
        background: var(--surface-1);
        color: var(--brand);
        padding: var(--size-6);
        position: relative;
        z-index: 0;
        border-radius: var(--radius-3);
        overflow: hidden;
        grid-template-columns: auto max-content;
        grid-template-rows: auto auto;
align-items: start;
        
    }

    .callout::before {
        content: "";
        height: 100%;
        width: 100%;
        display: block;
        background: var(--brand);
        position: absolute;
        inset: 0;
        z-index: -1;
        opacity: .1;
    }



    .callout__content {
        color: var(--text-1);
        grid-row: 2;
        grid-column: 1;
    }

    .callout__title {
        grid-column: 1;
        font-size: var(--font-size-3);
        font-weight: var(--font-weight-bold);
    }

    .callout__icon {
        font-size: var(--font-size-fluid-2);
        grid-column: 2;
        grid-row: 1 / -1;
        
    }
</style>
