---
import type { SizeValue } from "@/data/props.types"

type Props = {
  class?: string
  columnSize?: SizeValue
  gap?: SizeValue
  columnGap?: SizeValue
  rowGap?: SizeValue,
  auto?: boolean,
  style?: any
}
const { columnSize, gap, columnGap, rowGap, class: className, auto, ...restProps } = Astro.props


const styles = {
  ...(columnSize && { '--_column': `var(--${columnSize})` }),
  ...(gap && { '--_gap': `var(--${gap})` }),
  ...(columnGap && { '--_column-gap': `var(--${columnGap})` }),
  ...(rowGap && { '--_row-gap': `var(--${rowGap})` }),
}
---

<div class:list={[`grid`, auto && `grid--auto`, className]} 
style={{
  ...styles, 
  ...restProps.style
}} {...restProps}>
  <slot />
</div>

<style is:global>
  .grid {
    --_column: var(--size-content-2);
    --_column-gap: var(--gutter);
    --_row-gap: var(--gutter);
    display: grid;
    column-gap: var(--_gap, var(--_column-gap));
    row-gap: var(--_gap, var(--_row-gap));
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }

  .grid--auto {
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(100%, var(--_column)), 1fr)
    );
  }
</style>
