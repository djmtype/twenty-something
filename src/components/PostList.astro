---
import { getCollection, type CollectionEntry } from "astro:content"
import FormattedDate from "@/components/FormattedDate.astro"
import { metafy } from "@/utils/textConverter"
import { sortByDate, filterByStatus } from "@/utils/postFunctions"
import Taxonomy from "@/components/Taxonomy.astro"

const postCollection = await getCollection("postCollection")

const allPosts = sortByDate(postCollection);

const publishedPosts = filterByStatus(allPosts)

const posts = publishedPosts.slice(0, 5)

type Props = {
  post: CollectionEntry<"postCollection">
};
---

<div class="recent-posts column-breakout flow">
  <slot />

  <ul role="list" class="recent-posts__list">
    {
      posts.map((post) => (
        <li class="recent-posts__item">
          <h3>
            <a href={post.slug}>{post.data.title}</a>
          </h3>
          <div class="recent-posts__details">
            <FormattedDate date={post.data.date} /> &mdash; by 
            <a href={`/author/${post.data.author.slug}`}>
              {metafy(post.data.author.slug)}</a> in <Taxonomy type="category" name={post.data.categories[0]} />
          </div>
        </li>
      ))
    }
  </ul>
</div>

<style is:global>
  .recent-posts__list > li {
    border-block-start: var(--border-size-1) solid var(--separator);
    padding-block-start: var(--size-5);
    margin-block-start: var(--size-5);
    
    display: flex;
    align-items: baseline;
    justify-content: space-between;
    max-inline-size: unset;
    row-gap: var(--size-2);
    column-gap: var(--gutter);
    flex-wrap: wrap;
  }


  .recent-posts__list li > :first-child {
    flex-basis: 0;
    flex-grow: 999;
    min-inline-size: 65%;
  }

  .recent-posts__list li > *:last-child {
    flex-basis: 30ch;
    flex-grow: 1;
  }

  .recent-posts__list h3 {
    font-size: var(--font-size-4);
  }
  .recent-posts hr {
    margin-block-end: var(--size-4);
  }

  .recent-posts__details {
    font-size: var(--font-size-1);
  }
</style>
