---
import { makeRichTitle } from "@/utils/textConverter"

import { getTaxonomy } from "@/utils/taxonomyParser"
import taxonomyFilter from "@/utils/taxonomyFilter"

import { sortByDate, filterByStatus } from "@/utils/postFunctions"

import BaseLayout from "@/layouts/BaseLayout.astro"
import Group from "@/components/Group.astro"
import Container from "@/components/Container.astro"
import PostCard from "@/components/PostCard.astro"
import Grid from "@/components/Grid.astro"

import { getCollection } from "astro:content"

export async function getStaticPaths() {
  const tags = await getTaxonomy("postCollection", "tags")

  return tags.map((tag) => {
    return {
      params: { name: tag },
      props: { tag },
    }
  })
}

const { tag } = Astro.props
const tagTitle = await makeRichTitle(tag)

const postCollection = await getCollection("postCollection")

const allPosts = sortByDate(postCollection)
const posts = filterByStatus(allPosts)

const filterByTags = taxonomyFilter(posts, "tags", tag!)
---

<BaseLayout
  title={`Tag: ${tagTitle}`}
  description={`A list of entries with tag, ${tagTitle}`}
>
  <Group type="section" class="entry">
    <Container>
      <div class="entry__content column-breakout flow">
        <h1 class="entry__title text-serif">
          Tag: <span>{tagTitle}</span>
        </h1>

        <Grid type="auto" class="entry__grid">
          {filterByTags.map((post) => <PostCard post={post} />)}
        </Grid>
      </div>
    </Container>
  </Group>
</BaseLayout>

<style>
  .entry__title {
    font-size: var(--font-size-fluid-3);
  }

  .entry__title span {
    font-style: italic;
  }

  .entry__grid {
    --_column: 30ch;
    --_row-gap: var(--size-fluid-5);
    align-items: start;
  }

  .entry__content {
    --_flow: var(--size-fluid-6);
  }
</style>
